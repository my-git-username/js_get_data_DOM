{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAiB,SAAS,gBAAgB,CAAC,qB,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAC3C,EAAQ,EAAE,CAEX,EAAA,CAAA,EAAA,EAAA,CAAA,EAAA,EAAA,KAAA,E,G,CAAL,IAAA,I,EAAK,EAAA,EAAY,CAAA,CAAA,OAAA,QAAA,CAAA,GAAZ,CAAA,CAAA,EAAA,AAAA,CAAA,EAAA,EAAA,IAAA,EAAA,EAAA,IAAA,AAAA,EAAA,EAAA,CAAA,EAAwB,CAE3B,IAAM,EAAS,AADF,AADV,EAAA,KAAA,CACa,WAAW,CACP,OAAO,CAAC,KAAM,IAElC,EAAM,IAAI,CAAC,EACb,C,C,M,E,CALK,EAAA,CAAA,EAAA,EAAA,C,Q,C,G,CAAA,GAAA,AAAA,MAAA,EAAA,MAAA,EAAA,EAAA,MAAA,E,Q,CAAA,GAAA,EAAA,MAAA,C,C,CAOL,IAAM,EAAM,EAAM,MAAM,CAAC,SAAC,CAAA,CAAK,CAA/B,EAAsC,OAAA,OAAO,GAAO,OAAO,E,GAGrD,EAAU,SAAS,aAAa,CAAC,yBACjC,EAAc,SAAS,aAAa,CAAC,0BAE3C,CAAA,EAAQ,WAAW,CAAG,EAAI,cAAc,CAAC,SACzC,EAAY,WAAW,CAAG,AANV,CAAA,EAAM,EAAtB,EAMkC,cAAc,CAAC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar population = _to_consumable_array(document.querySelectorAll(\"span.population\"));\nvar total = [];\nvar _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;\ntry {\n    for(var _iterator = population[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){\n        var el = _step.value;\n        var text = el.textContent;\n        var number = text.replace(/,/g, \"\");\n        total.push(number);\n    }\n} catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n} finally{\n    try {\n        if (!_iteratorNormalCompletion && _iterator.return != null) {\n            _iterator.return();\n        }\n    } finally{\n        if (_didIteratorError) {\n            throw _iteratorError;\n        }\n    }\n}\nvar sum = total.reduce(function(acc, el) {\n    return Number(acc) + Number(el);\n});\nvar averege = sum / 10;\nvar textSum = document.querySelector(\"span.total-population\");\nvar textAverege = document.querySelector(\"span.average-population\");\ntextSum.textContent = sum.toLocaleString(\"en-US\");\ntextAverege.textContent = averege.toLocaleString(\"en-US\");\n\n//# sourceMappingURL=index.4396743b.js.map\n","'use strict';\n\nconst population = [...document.querySelectorAll('span.population')];\nconst total = [];\n\nfor (const el of population) {\n  const text = el.textContent;\n  const number = text.replace(/,/g, '');\n\n  total.push(number);\n}\n\nconst sum = total.reduce((acc, el) => Number(acc) + Number(el));\nconst averege = sum / 10;\n\nconst textSum = document.querySelector('span.total-population');\nconst textAverege = document.querySelector('span.average-population');\n\ntextSum.textContent = sum.toLocaleString('en-US');\ntextAverege.textContent = averege.toLocaleString('en-US');\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","population","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","total","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","next","done","number","text","el","value","textContent","replace","push","err","return","sum","reduce","acc","Number","textSum","querySelector","textAverege","toLocaleString","averege"],"version":3,"file":"index.4396743b.js.map"}